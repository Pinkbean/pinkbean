<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	version="3.0"><!-- Web module 버전과 관계된 부분 -->
	<display-name>Archetype Created Web Application</display-name>

	<!-- Root Web ApplicationContext(RooWAC) -->
	<context-param>
		<param-name>contextClass</param-name>
		<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
	</context-param>
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>com.lsg.pinkbean.bo.config.ApplicationConfig</param-value>
	</context-param>
	<context-param>
		<param-name>logbackConfigLocation</param-name>
		<param-value>classpath:config/logback.xml</param-value>
	</context-param>

	<!-- listener  -->
	<!-- 
		ContextLoaderListener보다 LogListener이 먼저 로드되어야 한다.
		컨텍스트로더쪽에서 로거를 사용하는 것 같다. 추측이다!
	 -->
	<listener>
		<listener-class>ch.qos.logback.ext.spring.web.LogbackConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- WebApplicationContext(WAC)  -->
	<!-- 
		- applicationContext 설정 및 ViewResolver 설정을 한다.
		- RooWAC의 자식같은 관계라 RooWAC에서 설정한 Bean을 WAC에서 사용할 수 있다. 하지만 반대는 안된다. (마치 클래스 상속관계같음)
		- 웹의 요청을 처리하는 부분이다. (@Controller 같은)
	 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextClass</param-name>
			<param-value>org.springframework.web.context.support.AnnotationConfigWebApplicationContext</param-value>
		</init-param>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>com.lsg.pinkbean.bo.config.WebMvcConfig</param-value>
		</init-param>
		<init-param>
			<param-name>throwExceptionIfNoHandlerFound</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
